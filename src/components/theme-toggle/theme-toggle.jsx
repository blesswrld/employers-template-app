import React, { useState, useEffect } from "react";
import "./light-theme.css";
import "./dark-theme.css";

const ThemeToggle = () => {
    const [isDarkMode, setIsDarkMode] = useState(false);

    useEffect(() => {
        // –°—á–∏—Ç—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –∏–∑ localStorage
        const savedTheme = localStorage.getItem("theme");
        if (savedTheme) {
            setIsDarkMode(savedTheme === "dark");
            document.body.classList.add(savedTheme); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è body
        } else {
            localStorage.setItem("theme", "light");
            document.body.classList.add("light"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
    }, []);

    const toggleTheme = () => {
        setIsDarkMode(!isDarkMode);
        const newTheme = !isDarkMode ? "dark" : "light";

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É –≤ localStorage
        localStorage.setItem("theme", newTheme);

        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª–∞—Å—Å—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
        document.body.classList.remove("light", "dark");
        document.body.classList.add(newTheme);
    };

    return (
        <button onClick={toggleTheme} className="btn btn-sm btn-toggle">
            {isDarkMode ? "üåû –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞" : "üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞"}
        </button>
    );
};

export default ThemeToggle;
